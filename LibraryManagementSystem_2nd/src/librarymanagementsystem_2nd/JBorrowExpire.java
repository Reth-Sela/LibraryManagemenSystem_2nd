/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package librarymanagementsystem_2nd;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
/**
 *
 * @author Setthi
 */
public class JBorrowExpire extends javax.swing.JFrame {
    // Method to establish database connection
    private Connection connectDB() {
        Connection conn = null;
        try {
            // Register JDBC driver
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            
            // Database URL
            String url = "jdbc:sqlserver://DESKTOP-B352R9T;databaseName=library";
            // Database credentials (replace 'your_username' and 'your_password' with your actual credentials)
            String username = "your_username";
            String password = "your_password";
            
            // Establish connection
            conn = DriverManager.getConnection(url, username, password);
            
            System.out.println("Connected to the database successfully!");
        } catch (ClassNotFoundException | SQLException e) {
            System.out.println("Error connecting to the database: " + e.getMessage());
        }
        return conn;
    }
    
    // Method to fetch data from the database based on BorrowID and populate text fields
    private void fetchDataFromDB(String borrowID) {
        try {
            Connection conn = connectDB(); // Establish connection
            if (conn != null) {
                // SQL query to fetch data based on BorrowID
                String query = "SELECT borrowex_id, expired_date, librarian_id FROM borrowed WHERE borrowex_id = ?";
                
                // Create PreparedStatement
                PreparedStatement pst = conn.prepareStatement(query);
                pst.setString(1, borrowID); // Set BorrowID parameter
                
                // Execute query
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    // Populate text fields with fetched data
                    jtxtBorrowID.setText(rs.getString("borrowex_id"));
                    jtxtExpiredDate.setText(rs.getString("expired_date"));
                    jtxtLibrarianID.setText(rs.getString("librarian_id"));
                } else {
                    // Borrow ID not found
                    System.out.println("Borrow ID not found!");
                }
                
                // Close resources
                rs.close();
                pst.close();
                conn.close();
            }
        } catch (SQLException e) {
            System.out.println("Error fetching data from the database: " + e.getMessage());
        }
    }

     
  
    public JBorrowExpire() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtxtLibrarianID = new javax.swing.JTextField();
        jtxtBorrowID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jtxtExpiredDate = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jbtnDelete = new javax.swing.JButton();
        jbtnNew = new javax.swing.JButton();
        jbtnInsert = new javax.swing.JButton();
        jbtnUpdate = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtSearch = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("LibrarianID");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, -1));

        jtxtLibrarianID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(jtxtLibrarianID, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 140, 430, 30));

        jtxtBorrowID.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(jtxtBorrowID, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 430, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("BorrowID");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel4.setText("ExpiredDate");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, -1, -1));

        jtxtExpiredDate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jPanel4.add(jtxtExpiredDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 430, 30));

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jbtnDelete.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbtnDelete.setText("Delete");
        jbtnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jbtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDeleteActionPerformed(evt);
            }
        });
        jPanel5.add(jbtnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 120, 40));

        jbtnNew.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbtnNew.setText("New");
        jbtnNew.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jbtnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNewActionPerformed(evt);
            }
        });
        jPanel5.add(jbtnNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 120, 40));

        jbtnInsert.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbtnInsert.setText("Insert");
        jbtnInsert.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jbtnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInsertActionPerformed(evt);
            }
        });
        jPanel5.add(jbtnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 120, 40));

        jbtnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jbtnUpdate.setText("Update");
        jbtnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jbtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUpdateActionPerformed(evt);
            }
        });
        jPanel5.add(jbtnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 120, 40));

        jPanel4.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 180, 240));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 980, 240));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("BorrowExpire's Information");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 340, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 940, 50));

        jtxtSearch.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jPanel1.add(jtxtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 440, 50));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel5.setText("Search");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, -1, -1));

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(95, 158, 160), 8));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "BorrowID", "ExpiredDate", "LibrarianID"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel6.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 960, 370));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 390, 980, 390));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 980, 780));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInsertActionPerformed
           try {
        String borrowID = jtxtBorrowID.getText();
        String expiredDate = jtxtExpiredDate.getText();
        String librarianID = jtxtLibrarianID.getText();

        Connection conn = connectDB(); // Establish connection
        if (conn != null) {
            // SQL query to insert data into the database
            String insertQuery = "INSERT INTO borrowed (borrowex_id, expired_date, librarian_id) VALUES (?, ?, ?)";
            
            // Create PreparedStatement for insertion
            PreparedStatement pstInsert = conn.prepareStatement(insertQuery);
            pstInsert.setString(1, borrowID);
            pstInsert.setString(2, expiredDate);
            pstInsert.setString(3, librarianID);
            
            // Execute insertion query
            int rowsInserted = pstInsert.executeUpdate();
            if (rowsInserted > 0) {
                System.out.println("Data inserted successfully!");
            } else {
                System.out.println("Failed to insert data.");
            }
            
            // Close resources
            pstInsert.close();
            
            // Fetch and display the inserted data
            fetchDataFromDB(borrowID); // Call method to fetch data and populate text fields
            
            conn.close(); // Close the connection
        }
    } catch (SQLException e) {
        System.out.println("Error inserting data into the database: " + e.getMessage());
    }
    }//GEN-LAST:event_jbtnInsertActionPerformed

    private void jbtnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNewActionPerformed
        jtxtBorrowID.setText("");
        jtxtExpiredDate.setText("");
        jtxtLibrarianID.setText("");
    }//GEN-LAST:event_jbtnNewActionPerformed

    private void jbtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUpdateActionPerformed
         try {
        String borrowID = jtxtBorrowID.getText();
        String expiredDate = jtxtExpiredDate.getText();
        String librarianID = jtxtLibrarianID.getText();

        Connection conn = connectDB(); // Establish connection
        if (conn != null) {
            // SQL query to update data in the database
            String updateQuery = "UPDATE borrowed SET expired_date = ?, librarian_id = ? WHERE borrowex_id = ?";
            
            // Create PreparedStatement for update
            PreparedStatement pstUpdate = conn.prepareStatement(updateQuery);
            pstUpdate.setString(1, expiredDate);
            pstUpdate.setString(2, librarianID);
            pstUpdate.setString(3, borrowID);
            
            // Execute update query
            int rowsUpdated = pstUpdate.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("Data updated successfully!");
            } else {
                System.out.println("Failed to update data.");
            }
            
            // Close resources
            pstUpdate.close();
            
            // Fetch and display the updated data
            fetchDataFromDB(borrowID); // Call method to fetch data and populate text fields
            
            conn.close(); // Close the connection
        }
    } catch (SQLException e) {
        System.out.println("Error updating data in the database: " + e.getMessage());
    }
    }//GEN-LAST:event_jbtnUpdateActionPerformed

    private void jbtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDeleteActionPerformed
        try {
        String borrowID = jtxtBorrowID.getText();

        Connection conn = connectDB(); // Establish connection
        if (conn != null) {
            // SQL query to delete data from the database
            String deleteQuery = "DELETE FROM borrowed WHERE borrowex_id = ?";
            
            // Create PreparedStatement for deletion
            PreparedStatement pstDelete = conn.prepareStatement(deleteQuery);
            pstDelete.setString(1, borrowID);
            
            // Execute delete query
            int rowsDeleted = pstDelete.executeUpdate();
            if (rowsDeleted > 0) {
                System.out.println("Data deleted successfully!");
            } else {
                System.out.println("Failed to delete data.");
            }
            
            // Close resources
            pstDelete.close();
            
            // Clear text fields after deletion
            jtxtBorrowID.setText("");
            jtxtExpiredDate.setText("");
            jtxtLibrarianID.setText("");
            
            conn.close(); // Close the connection
        }
    } catch (SQLException e) {
        System.out.println("Error deleting data from the database: " + e.getMessage());
    }
    }//GEN-LAST:event_jbtnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JBorrowExpire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JBorrowExpire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JBorrowExpire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JBorrowExpire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JBorrowExpire().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbtnDelete;
    private javax.swing.JButton jbtnInsert;
    private javax.swing.JButton jbtnNew;
    private javax.swing.JButton jbtnUpdate;
    private javax.swing.JTextField jtxtBorrowID;
    private javax.swing.JTextField jtxtExpiredDate;
    private javax.swing.JTextField jtxtLibrarianID;
    private javax.swing.JTextField jtxtSearch;
    // End of variables declaration//GEN-END:variables
}
